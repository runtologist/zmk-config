/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define AS(keycode) &as LS(keycode) keycode
#define TM(layer, keycode) &tm layer keycode
#define SCW(mod) &scw mod 0

/ {
        combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <100>;
                key-positions = <13 14>;
                bindings = <&kp ESC>;
            };
        };
        behaviors {
            as: auto_shift {
                compatible = "zmk,behavior-hold-tap";
                label = "AUTO_SHIFT";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <195>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            tm: thumb_mod {
                compatible = "zmk,behavior-hold-tap";
                label = "THUMB_LAYER_TAB";
                #binding-cells = <2>;
                flavor = "tap-preferred";
                tapping-term-ms = <200>;
                quick-tap-ms = <195>;
                bindings = <&mo>, <&kp>;
            };
            scw: shift_caps_word {
                compatible = "zmk,behavior-hold-tap";
                label = "SHIFT_CAPS_WORD";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <195>;
                flavor = "hold-preferred";
                bindings = <&kp>, <&caps_word>;
            };
        };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |   `   |  1  |  2  |  3   |  4   |  5          |                             |  6          |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  F   |  P   |  B          |                             |  J          |  L    |  U    |  Y   |   ;   |   =   |
// |  CTRL |  A  |  R  |  S   |  T   |  G          |                             |  M          |  N    |  E    |  I   |   O   |   '   |
// |  SCW  |  Z  |  X  |  C   |  D   |  V          |  "["        |  |  "]"       |  K          |  H    |  ,    |  .   |   /   |   \   |
//                     | ALT  | GUI  | SPACE/LOWER | ENTER/RAISE |  | BKSP/RAISE | SPACE/LOWER | GUI   | ALT   |
            bindings = <
AS(GRAVE) AS(N1)  AS(N2)  AS(N3)    AS(N4)        AS(N5)                                 AS(N6)        AS(N7)    AS(N8)    AS(N9)  AS(N0)    AS(MINUS)
&kp TAB   AS(Q)   AS(W)   AS(E)     AS(R)         AS(T)                                  AS(Y)         AS(U)     AS(I)     AS(O)   AS(P)  AS(EQUAL)
&kp LSFT       AS(A)   AS(S)   AS(D)     AS(F)         AS(G)                                  AS(H)         AS(J)     AS(K)     AS(L)   AS(SEMI)     AS(SQT)
SCW(LCTRL) AS(Z)   AS(X)   AS(C)     AS(V)         AS(B)       AS(LBKT)     AS(RBKT)      AS(N)         AS(M)     AS(COMMA) AS(DOT) AS(FSLH)  AS(BSLH)
                          &kp LALT  &mt LGUI ESC  TM(1,SPACE) TM(2,ENTER)  TM(2,BSPC)    TM(1,SPACE)   &kp RGUI  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1    | BT2          |  BT3     |  BT4   |  BT5 |                   | OUT_BLE | OUT_USB |       |      |       |       |
// |       |        |              |          |        |      |                   |         | WORDL   | PGDWN | PGUP | WORDR | PSCRN |
// |       | C_MUTE | C_VOL_DN     | C_VOL_UP |        |      |                   | ESC     |   <-    |   v   |  ^   |  ->   | DEL   |
// |       | C_PREV | C_PLAY_PAUSE |          | C_NEXT |      |      |       |    |         | HOME    | BOTTOM| TOP  |  END  | ENTER |
// |kt CTRL|        |              |          |        |      |      |       |    |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                    &out OUT_BLE    &out OUT_USB    &trans          &trans       &trans        &trans
&trans     &trans           &trans            &trans            &trans       &trans                          &trans          &kp LC(LEFT)    &kp PG_UP       &kp PG_DN    &kp LC(RIGHT) &kp PSCRN
&trans     &kp C_MUTE       &kp C_VOL_DN      &kp C_VOL_UP      &trans       &trans                          &kp ESC         &kp LEFT        &kp DOWN        &kp UP       &kp RIGHT     &kp DEL
&kt LCTRL  &kp C_PREV       &kp C_PLAY_PAUSE  &trans            &kp C_NEXT   &trans      &trans     &trans   &trans          &kp HOME        &kp LC(END)     &kp LC(HOME) &kp END       &kp ENTER
                                              &trans            &trans       &trans      &trans     &trans   &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |   F1  |  F2   |  F3    |  F4  |  F5  |  F6  |                   |  F7  |   F8  |  F9   |  F10 |  F11  |  F12  |
// |       |       |        |      |      |      |                   |      | WORDL | PGDWN | PGUP | WORDR | PSCRN |
// |       | LCTRL | LSHIFT | LALT | LGUI |      |                   | ESC  |   <-  |   v   |  ^   |  ->   | DEL   |
// |       |       |        |      |      |      |        |  |       |      | HOME  | BOTTOM| TOP  |  END  | ENTER |
// |       |       |        |      |      |      |        |  |       |      |       |       |      |       |       |
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6                    &kp F7      &kp F8       &kp F9      &kp F10      &kp F11       &kp F12
&trans    &trans    &trans    &trans    &trans    &trans                    &trans      &kp LC(LEFT) &kp PG_UP   &kp PG_DN    &kp LC(RIGHT) &kp PSCRN
&trans    &kp LCTRL &kp LSHFT &kp LALT  &kp LGUI  &trans                    &kp ESC     &kp LEFT     &kp DOWN    &kp UP       &kp RIGHT     &kp DEL
&trans    &trans    &trans    &trans    &trans    &trans  &trans   &trans   &trans      &kp HOME     &kp LC(END) &kp LC(HOME) &kp END       &kp ENTER
                              &trans    &trans    &trans  &trans   &trans   &trans      &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
